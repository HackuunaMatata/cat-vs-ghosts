var rex = document.getElementById('rex'); 
var cat1 = document.getElementById('cat1');
var cat2 = document.getElementById('cat2');

var jump = 0; // 0 - нет прыжка, 1 - прыжок, 2 - зависание и падение
var start = false; // запущена ли игра
var score; // счет, увеличивается за каждого ушедшего котика
var mainInterval, idUp; // функции, которые будут выполняться с некоторой периодичностью
var rex_pos; // текущая позиция приведения
var cat1_pos, cat1_width, cat1_height; // позиция и размеры котика 1
var cat2_pos, cat2_width, cat2_height; // позиция и размеры котика 2
var speed; // скорость

function init() { // инициализация игры
    document.getElementsByClassName('text')[0].innerHTML = "Score: 0"; // вывод счета
	speed = 25; // изначально скорость =25
    score = 0; // изначально счет =0
    rex_pos = 200; // переменная; изначально позиция приведения =200
    cat1_pos = screen.width; // переменная; изначально позиция первого котика равна ширине экрана
    cat1_width=50; cat1_height = 50; // начальные размеры котика 1
    cat2_pos = screen.width + 500; // переменная; изначально позиция второго котика больше ширины экрана на 500
    cat2_width=50; cat2_height = 50; // начальные размеры котика 2

    rex.style.left = '100px'; // стиль; приведение отступает от левого края на 100px
    rex.style.bottom = '200px'; // стиль; приведение отступает от нижнего края на 200px
    cat1.style.left = cat1_pos + 'px'; // стиль расположения котика 1 от левого края
    cat1.style.bottom = '200px'; // стиль; котик 1 отступает от нижнего края на 200px
    cat2.style.left = cat2_pos + 'px'; // стиль расположения котика 2 от левого края
    cat2.style.bottom = '200px'; // стиль; котик 1 отступает от нижнего края на 200px
};
init(); // вызов функции инициализации игры

window.addEventListener('keydown', function (e) { // слушатель нажатия клавиши
    if (!start && e.keyCode == 13) { // если игра еще не началась и нажат Enter, то
        init(); // вызываем функцию инициализации игры
        game(); // вызываем функцию, отвечающую за процесс игры
        start = true; // и говорим, что игра началась
    }
	if ((e.keyCode != 32 && e.keyCode != 38) || (jump!=0) || !start) return; // если нажат не пробел или стрелочка вверх, или игра еще не началась,
																			 // или приведение в состоянии прыжка, т.е. прыгает или зависает или падает, то выйдем из функции
	jump = 1; // иначе зафиксируем прыжок
	idUp = setInterval(function () { // функция, которая будет выполняться каждые 20мс, пока не будет вызван clearInterval
		if (rex_pos >= 450) { // если позиция проведения достигла 450  или стала больше, то
			rex_pos = 450; // сделаем позицию равной 450
			jump = 2; // состояние зависания или падения
			setTimeout(rexDown, 120); // через 120мс вызовем функцию падения; приведение немного зависнет в воздухе
			clearInterval(idUp); // останавливаем выполнение функции idUp
			return; // и выходим из нее
		}
		rex_pos += 10; // изменяем позицию приведения, чтобы оно двигалось вверх
		rex.style.bottom = rex_pos + 'px'; // стиль; приведение отступает от нижнего края на новую позицию
	}, 20);
});

window.addEventListener('keyup', function (e) { // слушатель отпускания клавиши
    if ((e.keyCode != 32 && e.keyCode != 38) || (jump!=1) || !start) return; // если нажат не пробел или стрелочка вверх, или игра еще не началась,
																			 // или приведение не прыгает, то выходим из функции
    jump = 2; // состояние зависания или падения
    setTimeout(rexDown, 120); // через 120мс вызовем функцию падения; приведение немного зависнет в воздухе
    clearInterval(idUp); // останавливаем выполнение функции idUp
});

var rexDown = function () { // функция падения
    var idDown = setInterval(function () { // функция, которая будет выполняться каждые 20мс, пока не будет вызван clearInterval
        if (rex_pos <= 200) { // если позиция приведения достигла 200 или стала меньше, то 
            jump = 0; // состояние "нет прыжка"
            rex_pos = 200; // делаем позицию равной 200
            rex.style.bottom = rex_pos + 'px'; // стиль; приведение отступает от нижнего края на новую позицию
            clearInterval(idDown); // останавливаем выполнение функции idDown
            return; // и выходим из нее
        }
        rex_pos -= 10; // изменяем позицию приведения, чтобы оно двигалось вниз
        rex.style.bottom = rex_pos + 'px'; // стиль; приведение отступает от нижнего края на новую позицию
    }, 20);
};

function game() { // функция, отвечающая за процесс игры
    mainInterval = setInterval(function () { // функция, которая будет выполняться каждые speed мс, пока не будет вызван clearInterval
        if (cat1_pos <= -50) { // если первый котик ушел за левую сторону экрана
            if (cat2_pos >= screen.width) { // а второй - за правой стороной, то
                cat1_pos = Math.random() * 200 + cat2_pos + 400; // задаем первому котику новую позицию так, чтобы он не был слишком близко ко второму
            } else { // если второй котик уже на экране, то
                cat1_pos = Math.random() * 400 + screen.width + 200; // задаем первому котику новую позицию так, чтобы он не был слишком близко ко второму,
																	 // и чтобы он скорее появился на экране
            }
            cat1.style.left = cat1_pos + 'px'; // стиль; котик 1 отступает от левого края на новую позицию
            cat1_height = (Math.random() * 50 + 50); // генерируем новую высоту котика 1
            cat1_width = (Math.random() * 50 + 50); // генерируем новую ширину котика 1
            cat1.style.width = cat1_width + 'px'; // стиль; задаем котику 1 новую ширину
            cat1.style.height = cat1_height + 'px'; // стиль; задаем котику 1 новую высоту
            score +=10; // увеличиваем счет на 10
            document.getElementsByClassName('text')[0].innerHTML = "Score: " + score; // обновляем строку счета
			if (score % 50 == 0 && speed > 10) { // если счет кратен 50 и скорость еще не максимальна, то
				speed--; // уменьшаем значение переменной, таким образом увеличивая скорость
				clearInterval(mainInterval); // останавливаем выполнение функции mainInterval
				game(); // вызываем функцию, отвечающую за процесс игры
				return; // выходим из функции mainInterval
			}
        }
        if (cat2_pos <= -50) { // если второй котик ушел за левую сторону экрана
            if (cat1_pos >= screen.width) { // а первый - за правой стороной, то
                cat2_pos = Math.random() * 200 + cat1_pos + 400; // задаем второму котику новую позицию так, чтобы он не был слишком близко к первому
            } else { // если первый котик уже на экране, то
                cat2_pos = Math.random() * 400 + screen.width + 200; // задаем второму котику новую позицию так, чтобы он не был слишком близко к первому,
																	 // и чтобы он скорее появился на экране
            }
            cat2.style.left = cat2_pos + 'px'; // стиль; котик 2 отступает от левого края на новую позицию
            cat2_height = (Math.random() * 50 + 50); // генерируем новую высоту котика 1
            cat2_width = (Math.random() * 50 + 50); // генерируем новую ширину котика 1
            cat2.style.width = cat2_width + 'px'; // стиль; задаем котику 1 новую ширину
            cat2.style.height = cat2_height + 'px'; // стиль; задаем котику 1 новую высоту
            score +=10; // увеличиваем счет на 10
            document.getElementsByClassName('text')[0].innerHTML = "Score: " + score; // обновляем строку счета
			if (score % 50 == 0 && speed > 10) { // если счет кратен 50 и скорость еще не максимальна, то
				speed--; // уменьшаем значение переменной, таким образом увеличивая скорость
				clearInterval(mainInterval); // останавливаем выполнение функции mainInterval
				game(); // вызываем функцию, отвечающую за процесс игры
				return; // выходим из функции mainInterval
			}
        }
        cat1_pos -= 10; // изменяем позицию первого котика, чтобы он двигался вперед
        cat2_pos -= 10; // изменяем позицию второго котика, чтобы он двигался вперед
        cat1.style.left = cat1_pos + 'px'; // стиль; котик 1 отступает от левого края на новую позицию
        cat2.style.left = cat2_pos + 'px'; // стиль; котик 2 отступает от левого края на новую позицию
        check(); // вызываем функцию проверки столкновения
    }, speed);
};

function check () {
    if ((rex_pos < 195 + cat1_height && cat1_pos < 155 && cat1_pos + cat1_width > 107) || // если нижний край приведения ниже высоты котика, и левый край котика
        (rex_pos < 195 + cat2_height && cat2_pos < 155 && cat2_pos + cat1_width > 107)) { // меньше 155, а правый:позицию+ширина: больше 107, то столкновение
																						  // таким образом, контролируется столкновение со всех сторон
        clearInterval(mainInterval); // останавливаем выполнение функции mainInterval
        document.getElementsByClassName('text')[0].innerHTML = "YOU LOSE! Score:" + score; // выводим сообщение о проигрыше с конечным счетом
        start = false; // и указываем, что игра не начата
    }
};